{"version":3,"sources":["Components/Header/Header.js","Components/States/State.js","Components/India/India.js","Components/World/World.js","App.js","reportWebVitals.js","index.js"],"names":["Header","className","basename","to","Component","State","state","stateData","fetch","then","res","json","response","setState","this","Object","keys","map","item","key","districts","districtData","total_active","total_confirmed","total_death","total_recovered","district_list","x","active","confirmed","deceased","recovered","ob","district_name","India","info","src","alt","cases","deaths","World","data","isLoaded","string","Date","toLocaleString","country","countryInfo","flag","style","width","height","updated","marginTop","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f77f1862.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport { HashRouter, Link } from \"react-router-dom\";\nimport \"./header.css\";\nexport default class Header extends Component {\n  render() {\n    return (\n      <div className=\"header\">\n        <h1>Covid-19 Tracker</h1>\n        <HashRouter basename=\"/\">\n          <Link to=\"/\">India</Link>\n          <Link to=\"/world\">World</Link>\n        </HashRouter>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./state.css\";\nexport default class State extends Component {\n  state = {\n    stateData: {},\n  };\n  componentDidMount() {\n    fetch(\"https://api.covid19india.org/state_district_wise.json\")\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({ stateData: response });\n      });\n  }\n  render() {\n    const { stateData } = this.state;\n    delete stateData.state;\n    let keys = Object.keys(stateData);\n    return keys.map((item, key) => {\n      let districts = stateData[item].districtData;\n      let total_active = 0;\n      let total_confirmed = 0;\n      let total_death = 0;\n      let total_recovered = 0;\n\n      let district_list = [];\n      for (let x in districts) {\n        total_active += districts[x].active;\n        total_confirmed += districts[x].confirmed;\n        total_death += districts[x].deceased;\n        total_recovered += districts[x].recovered;\n        let ob = districts[x];\n        ob[\"district_name\"] = x;\n        district_list = [...district_list, ob];\n      }\n      return (\n        <div key={key} className=\"state\">\n          <div className=\"state-head\">\n            <div>\n              <h3>{item}</h3>\n              <span className=\"confirm\">Confirmed: {total_confirmed}</span>\n              <span className=\"active\">Active : {total_active}</span>\n              <span className=\"recover\">Recovered: {total_recovered}</span>\n              <span className=\"death\">Death: {total_death}</span>\n            </div>\n          </div>\n          <div className=\"table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>District</th>\n                  <th>Confirmed</th>\n                  <th>Active</th>\n                  <th>Recovered</th>\n                  <th>Deaths</th>\n                </tr>\n              </thead>\n              <tbody>\n                {district_list.map((item, key) => {\n                  return (\n                    <tr key={key}>\n                      <td>{item.district_name}</td>\n                      <td>{item.confirmed}</td>\n                      <td>{item.active}</td>\n                      <td>{item.recovered}</td>\n                      <td>{item.deceased}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport State from \"../States/State\";\nimport \"./india.css\";\nexport default class India extends Component {\n  state = {\n    info: {},\n  };\n  componentDidMount() {\n    fetch(\"https://corona.lmao.ninja/v2/countries/india\")\n      .then((res) => res.json())\n      .then((response) => {\n        this.setState({ info: response });\n      });\n  }\n  render() {\n    const { info } = this.state;\n    return (\n      <div className=\"main-india\">\n        <div className=\"head\">\n          <h1>India</h1>\n          <img\n            src=\"https://www.countryflags.io/in/shiny/64.png\"\n            alt=\"Indian Flag\"\n          />\n        </div>\n        <div className=\"india-status\">\n          <div className=\"confirm\">\n            <h2>Confirmed</h2>\n            <p>{info.cases}</p>\n          </div>\n          <div className=\"active\">\n            <h2>Active</h2>\n            <p>{info.active}</p>\n          </div>\n          <div className=\"recover\">\n            <h2>Recovered</h2>\n            <p>{info.recovered}</p>\n          </div>\n          <div className=\"death\">\n            <h2>Deaths</h2>\n            <p>{info.deaths}</p>\n          </div>\n        </div>\n        <div>\n          <State />\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport \"./world.css\";\nexport default class World extends Component {\n  state = {\n    data: [],\n  };\n  componentDidMount() {\n    fetch(\"https://corona.lmao.ninja/v2/countries\")\n      .then((res) => res.json())\n      .then((response) => {\n        if (response) {\n          this.setState({ data: response, isLoaded: true });\n        } else {\n          this.setState({ isLoaded: false });\n        }\n      });\n  }\n  formatDate(string) {\n    return new Date(string).toLocaleString();\n  }\n  render() {\n    const { data, isLoaded } = this.state;\n    if (isLoaded) {\n      return (\n        <div className=\"world\">\n          <h1>World</h1>\n          <div className=\"table\">\n            <table>\n              <thead>\n                <tr>\n                  <th>Country</th>\n                  <th>Confirmed</th>\n                  <th>Active</th>\n                  <th>Recovered</th>\n                  <th>Deaths</th>\n                  <th>Updated on</th>\n                </tr>\n              </thead>\n              <tbody>\n                {data.map((item, key) => {\n                  return (\n                    <tr key={key}>\n                      <td>\n                        {item.country}\n                        <img\n                          src={item.countryInfo.flag}\n                          alt={item.country}\n                          style={{ width: \"50px\", height: \"25px\" }}\n                        />\n                      </td>\n                      <td>{item.cases}</td>\n                      <td>{item.active}</td>\n                      <td>{item.recovered}</td>\n                      <td>{item.deaths}</td>\n                      <td>{new Date(item.updated).toLocaleString()}</td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        </div>\n      );\n    } else {\n      return (\n        <div style={{ marginTop: \"75px\" }}>\n          <h1>Loading</h1>\n        </div>\n      );\n    }\n  }\n}\n","import React, { Component } from \"react\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header/Header\";\nimport India from \"./Components/India/India\";\nimport World from \"./Components/World/World\";\nexport default class App extends Component {\n  render() {\n    return (\n      <>\n        <Router>\n          <Header />\n          <Route path=\"/\" exact component={India} />\n          <Route path=\"/world\" exact component={World} />\n        </Router>\n      </>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}